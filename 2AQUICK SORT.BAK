// 2A QUICK SORT
#include<iostream.h>
#include<conio.h>

void swap(int *a,int *b)
{
 int t=*a;
 *a=*b;
 *b=t;
}

void print(int arr[],int n)
{
 int i;
 for(i=0;i<n;i++)
  cout<<arr[i]<<" ";
}
int partition(int arr[],int l,int r)
{
 int pindex=l;
 int pivot =arr[r];
 int i;
 for(i=l;i<r-1;i++)
 {
  if(arr[i]<=pivot)
  {
   swap(&arr[i],&arr[pindex]);
   pindex++;
  }
 }
 swap(&arr[r],&arr[pindex]);//arr[r]->pivot,pindex->correct pos for pivot
 return pindex;
}


void quick_sort(int arr[],int l,int r)
{
 if(l<r)
 {
  int pindex=partition(arr,l,r);
  quick_sort(arr,l,pindex-1);
  quick_sort(arr,pindex+1,r);
 }
}

void main()
{
 clrscr();
 int arr[10],n;
 cout<<"ENTER THE NO OF ELEMENTS: ";
 cin>>n;
 int i;

 cout<<"\nENTER THE ARRAY: ";
 for(i=0;i<n;i++)
  cin>>arr[i];
 cout<<"\nARRAY BEFORE SORTING: ";
 print(arr,n);
 quick_sort(arr,0,n-1);
 cout<<"\nARRAY AFTER SORTING: ";
 print(arr,n);
 getch();
}


/*
ENTER THE NO OF ELEMENTS: 5
                                                                                
ENTER THE ARRAY: 50 11 10 100 6                                                 
                                                                                
ARRAY BEFORE SORTING: 50 11 10 100 6                                            
ARRAY AFTER SORTING: 6 10 11 50 100          */
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
